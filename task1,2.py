# -*- coding: utf-8 -*-
"""Copy of Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lKUCWPhc67dItjS7snEIEBdgp-a-e-qo
"""

#Question 7 :
#Define a function that can accept an integer number as input and print the "It is an even number" if the number is even, otherwise print "It is an odd number".

#Hints:Use % operator to check if a number is even or odd.



def find(num):
    # code logic here
    if num%2 == 0:
        numtype="even"
    else:
        numtype = "odd"
    return numtype

num = int(input('Enter the number: '))  # 1. take your input
numtype = find(num)                     # 2. call the find function
print('Given number is',numtype)      # 3. print if the number is even or odd

#Question 5 :Define a function that can accept two strings as input and concatenate them and then print it in console.
#Hints:Use + to concatenate the strings
def concat(st1,st2):
  st1 =(input("Enter First Strings"))
  st2 =(input("Enter Second Strings"))
  concatt=st1+st2
  return concatt
  concatt=concat(st1,st2)
  print('The Strings after concatinations is:',concatt)

#Question:Define a function that can accept two strings as input and concatenate them and then print it in console.
def printValue(s1,s2):
	print (s1+s2)

printValue("hello ","Aya")

from IPython.lib.display import IFrame
# Question 8 :Write a program which accepts a string as input to print "Yes" if the string is "yes" or "YES" or "Yes", otherwise print "No". 
#Hints:Use if statement to judge condition
#string=input(('Enter string yes or YES or Yes'))
s= input("Please Enter The Secret Word:")
if s=="yes" or s=="YES" or s=="Yes":
    print ("Yes")
else:
    print( "No")

#- write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5,
#between 2000 and 3200 (both included). Hint The numbers obtained should be printed in a comma-separated sequence on a single line.
#Consider use range(#begin, #end) method
n1=[]
for x in range(2000, 3200):
    if (x%7==0) and (x%5!=0):
        n1.append(str(x))
print (" ,".join(n1))

# Question 1:
#Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.

#Hints:Use dict[key]=value pattern to put entry into a dictionary.Use ** operator to get power of a number.
def dictionary():
  d=dict()

  for x in range(1,4):
    d[x]=x**2
  print(d)  
dictionary()

#Question 2:Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.
#Hints:Use dict[key]=value pattern to put entry into a dictionary.Use ** operator to get power of a number.
#Use range() for loops.Use keys() to iterate keys in the dictionary. Also we can use item() to get key/value pairs.
def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.values():
		print (k)
printDict()

# Question 3:Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.
#Hints:Use dict[key]=value pattern to put entry into a dictionary,Use ** operator to get power of a number.
#Use range() for loops.Use keys() to iterate keys in the dictionary. Also we can use item() to get key/value pairs.

def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():
		print (k)
printDict()

# Question 4 Write a Python program to check a dictionary is empty or not
dictt={'name':'ahmed',"age":30,"job":"teacher"}
 
dict2 = {}

print("The original dictionary : " ,(dictt))
print("The original dictionary : " ,(dict2))
# Check if dictionary is empty
if dictt:
   print("dict1 is not empty")
else:
   print("dict1 is empty")
if dict2:
   print("dict2 is not empty")
else:
   print("dict2 is empty")

#Question 5Write a Python program to test whether every element in s is in t and every element in t is in s.
listS = ['a', 'a', 'b','b','b','c']
listT = ['b', 'a','a','b','c','d']
all(item in listS for item in listT)and all(item in listT for item in listS)

# Question 6 Create set 1 and set 2 then Write a Python program to 1- create an intersection of sets.
 #
list1 = {'a', 'a', 'b','b','b','c'}
list2 = {'b', 'a','a','b','c','d'}
z = list1.intersection(list2)

print(z)

#2-  a union of sets.
y = list1.union(list2)
print(y)
#3- create set difference.
h = list1.difference(list2)
print(h)
#4- a symmetric difference.
f = list1.symmetric_difference(list2)
print(f)

#Question  7Write a Python program to use of frozensets.
mylist = ['apple', 'banana', 'cherry']
x = frozenset(mylist)

#x[1] = "strawberry"        ##cannot frozen
print(x)

# Question 8 Write a Python program to find maximum and the minimum value in a set.
num = {30, 10, 15, 15, 2, 90}
print("\nMaximum value of the num set is:",max(num))

# Question9 :With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line. 
#Hints:Use [n1:n2] notation to get a slice from a tuple.
list = [1,2,3,4,5,6,7,8,9,10]

# Create list1 with half elements (first 3 elements)
n1 = list [:5]
# Create list2 with next half elements (next 3 elements)
n2 = list [5:]

# print list (s)
print ("list : ",list)
print ("list1: ",n1)
print ("list2: ",n2)

# Question 10 :
#You are required to write a program to sort the (name, age, height) tuples by ascending order where name is string, age and height are numbers. The tuples are input by console. The sort criteria is:
#1: Sort based on name;
#2: Then sort based on age;
#3: Then sort by score.
#The priority is that name > age > score.
#If the following tuples are given as input to the program:
#Tom,19,80
#John,20,90
#Jony,17,91
#Jony,17,93
#Json,21,85
#Then, the output of the program should be:
#[('John', '20', '90'), ('Jony', '17', '91'), ('Jony', '17', '93'), ('Json', '21', '85'), ('Tom', '19', '80')]

#Hints:n case of input data being supplied to the question, it should be assumed to be a console input.
#We use itemgetter to enable multiple sort keys.
l = []
while True:
    s = raw_input()
    if not s:
        break
    l.append(tuple(s.split(",")))

print(sorted(l, key=itemgetter(0,1,2))

# Question 11:Please write a program to generate a list with 5 random numbers between 100 and 200 inclusive.

import random
print (random.sample(range(100,201), 5))

# Question 12 Please write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.
import random
print (random.sample([i for i in range(100,201) if i%2==0], 5))

# Question 13  Please write a program to randomly print a integer number between 7 and 15 inclusive.
# Hints: Use random.randrange() to a random integer in a given range.
import random
resp = [i for i in range(7,16,1)]
print(random.choice(resp))

# Question 14
Please write a program to print the running time of execution of "1+1" for 100 times.
#ints:Use timeit() function to measure the running time.



#Question 15 :Please write a program to shuffle and print the list [3,6,7,8].
#Hints:Use shuffle() function to shuffle a list.
from random import shuffle
list = [3,6,7,8]
shuffle(list)
print(list)

f